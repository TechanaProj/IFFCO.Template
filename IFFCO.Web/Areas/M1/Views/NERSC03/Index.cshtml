@model IFFCO.NERRS.Web.ViewModels.NERSC03ViewModel

@{
    ViewData["Title"] = "Index";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/js/Common.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>



<script>
    function fnGet_Data() {
        debugger;
        //var QuarterCode = $('#QuarterCode option:selected').val();
        var OccupantCode = $('#OccupantCode option:selected').val();
        var PlantCD = $('#PlantCD').val();

        if (typeof PlantCD == "undefined" || PlantCD == null || PlantCD.trim() == "") {
            CommonAlert("Alert", "Select Plant CD", null, null, "Warning");
            return false;
        } else if (OccupantCode == "") {
            CommonAlert("Alert", "Select Quarter", null, null, "Warning");
            return false;

        } else {
            PageNotLoad('@Url.Action("Index", "NERSC03", new { area = "M1" })?PlantCD=' + PlantCD +  '&OccupantCode=' + OccupantCode, this);


        }
    }

    function Validate() {
        if ($('#PlantCD').val() == "") {
            CommonAlert("Alert", "Select Plant CD", null, null, "Warning");
            return false;
        } else if ($('#OccupantCode').val() == "") {
            CommonAlert("Alert", "Select Quarter type", null, null, "Warning");
            return false;
        } else {
            return true;
        }
    }

    function SaveAccessToDB() {
    if (confirm("Do you want to save data?")) {
        $(".modalLoader").css("display", "block");

        debugger;
        setTimeout(function () {
            var formData = new FormData();
            var hasValidData = false;

            // Add static fields
            formData.append("nERSC03ViewModel.PlantCD", $('#PlantCD option:selected').val());
            formData.append("nERSC03ViewModel.OccupantCode", $('#OccupantCode option:selected').val());
            formData.append("nERSC03ViewModel.VacancyDate", $('#vacancyDateId').val());

            let cnt = 0;
            $("#HrmsHrdGrid tbody tr").each(function () {
                var row = $(this);
                var isChecked = row.find("td:eq(12) input[type='checkbox']").is(":checked"); // Checkbox
                var slno = row.find("td:eq(1) input").val().trim(); // Hidden SNo
                var allotmentNo = row.find("td:eq(2)").text().trim(); // Allotment No
                var vendorCode = row.find("td:eq(3) select option:selected").val(); // Vendor Code
                var vacancyDateText = row.find("td:eq(6) input").val(); // Vacancy Date
                var occupancyDateText = row.find("td:eq(5) input").val(); // Rent From Date
                var noOfBeds = row.find("td:eq(7) input").val(); // No of Days (hidden)
                var rate = row.find("td:eq(8) input").val(); // Rate (hidden)
                var amount = row.find("td:eq(9) input").val(); // Amount (hidden)
                var occupantType = row.find("td:eq(10) select option:selected").val(); // Occupant Type
                var rentType = row.find("td:eq(11) select option:selected").val(); // Rent Type

                //var slno = row.find("td:eq(1)").text().trim();
                //if (slno === "") {
                //    slno = 1;
                //} else {
                //    slno = parseInt(slno);
                //}

                // Check if occupancy date is provided (mandatory check)
                if (isChecked && !occupancyDateText) {
                    CommonAlert("Alert", "Occupancy Date is required for checked rows.", null, null, "Warning");
                    $(".modalLoader").css("display", "none");
                    isInvalidDataFound = true;
                    return false;
                }

                var occupancyDate = occupancyDateText ? new Date(occupancyDateText.split('/').reverse().join('-')) : null;
                var vacancyDate = vacancyDateText ? new Date(vacancyDateText.split('/').reverse().join('-')) : null;

                // Check if vacancy date is provided, then check if occupancy date is less than vacancy date
                if (vacancyDate && occupancyDate && occupancyDate >= vacancyDate) {
                    CommonAlert("Alert", "Occupancy Date must be earlier than Vacancy Date for checked rows.", null, null, "Warning");
                    $(".modalLoader").css("display", "none");
                    isInvalidDataFound = true;
                    return false;
                }

                if (isChecked) {
                    // Validate mandatory fields
                    if (!occupantType || !rentType) {
                        CommonAlert("Alert", "Please select both Occupant Type and Rent Type for checked rows.", null, null, "Warning");
                        $(".modalLoader").css("display", "none");
                        return false; // Exit loop for invalid row
                    }

                    // Mark that valid data is being sent
                    hasValidData = true;

                    // Append data to formData
                    formData.append(`nERSC03ViewModel.listVwAonlaNonEmpAllotStatusShutdown[${cnt}].SlNo`, slno);
                    formData.append(`nERSC03ViewModel.listVwAonlaNonEmpAllotStatusShutdown[${cnt}].AllotmentNo`, allotmentNo);
                    formData.append(`nERSC03ViewModel.listVwAonlaNonEmpAllotStatusShutdown[${cnt}].VendorCode`, vendorCode);
                    formData.append(`nERSC03ViewModel.listVwAonlaNonEmpAllotStatusShutdown[${cnt}].VacancyDate_Text`, vacancyDateText);
                    formData.append(`nERSC03ViewModel.listVwAonlaNonEmpAllotStatusShutdown[${cnt}].OccupancyDate_Text`, occupancyDateText);
                    formData.append(`nERSC03ViewModel.listVwAonlaNonEmpAllotStatusShutdown[${cnt}].NofBeds`, noOfBeds);
                    formData.append(`nERSC03ViewModel.listVwAonlaNonEmpAllotStatusShutdown[${cnt}].Rate`, rate);
                    formData.append(`nERSC03ViewModel.listVwAonlaNonEmpAllotStatusShutdown[${cnt}].Amt`, amount);
                    formData.append(`nERSC03ViewModel.listVwAonlaNonEmpAllotStatusShutdown[${cnt}].OccupantCode`, occupantType);
                    formData.append(`nERSC03ViewModel.listVwAonlaNonEmpAllotStatusShutdown[${cnt}].RentType`, rentType);

                    cnt++;
                }
            });

            // Check if valid data was added
            if (!hasValidData) {
                CommonAlert("Alert", "No valid data to save. Please check your selections.", null, null, "Warning");
                $(".modalLoader").css("display", "none");
                return false;
            }

            // Perform AJAX request
            $.ajax({
                type: "POST",
                url: "@Url.Content("~")/M1/NERSC03/Add",
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (response) {
                    debugger;
                    var plantCD = $('#PlantCD').val(); // Get selected value of PlantCD dropdown
                    var occupantType = $('#OccupantList').val(); // Get selected value of OccupantType dropdown
                    var occupantCode = $('#OccupantCode').val(); // Get selected value of OccupantCode dropdown

                    // Construct the URL with query parameters
                    var url = window.location.origin + "/" + response.areaName + "/" + response.selectedMenu + "/" + response.selectedAction + "?PlantCD=" + plantCD + "&OccupantList=" + occupantType + "&OccupantCode=" + occupantCode;
                    GetIndex(url);
                    //if (response.isAlertBox) {
                    //    if (response.errorMessage != "") {
                    //        CommonAlert(response.alert, response.message, SubmitPopup, '/M1/NERSC01/Index', "error");
                    //    } else {
                    //        CommonAlert(response.alert, response.message, SubmitPopup, '/M1/NERSC01/Index', "alert", "create");
                    //    }
                    //} else {
                    //    $(".modalLoader").show();
                    //    GetIndex(url);
                    //}
                    Swal.fire({
                        icon: 'success',
                        title: 'Saved Successfully',
                        showConfirmationButton: true,
                        width: '500px'
                    })
                },
                
                error: function () {
                    $(".modalLoader").css("display", "none");
                    CommonAlert("Error", "An error occurred while saving data. Please try again.", null, null, "error");
                }
            });
        }, 10);
    }
}



    @*function SaveAccessToDB() {
        debugger;
        if (confirm("Do you want to Save Data?")) {
            $(".modalLoader").css("display", "block");
            setTimeout(function () {
                debugger;
                var formData = new FormData();
                var hasValidData = false;
                var isInvalidDataFound = false; // Flag to check for invalid data

                formData.append("nERSC03ViewModel.PlantCD", $('#PlantCD option:selected').val());
                formData.append("nERSC03ViewModel.OccupantCode", $('#OccupantCode option:selected').val());
                formData.append("nERSC03ViewModel.VacancyDate", $('#vacancyDateId ').val());


                cnt = 0;

                $("#HrmsHrdGrid tbody tr").each(function (index, e) {
                    var row = $(this);
                    var isChecked = row.find("td:eq(11) input[type='checkbox']").is(":checked");
                    //var slno = row.find("td:eq(3)").val();
                   var slno = row.find("td:eq(1)").text().trim();
                    if (slno === "") {
                        slno = 1; // Set to 1 if it's empty or undefined
                    } else {
                        slno = parseInt(slno) + 1; // Increment the existing SlNo
                    }

                    var vendorCode = row.find("td:eq(3) select option:selected").val();
                    var occupantType = row.find("td:eq(9) select option:selected").val();
                    var rentType = row.find("td:eq(10) select option:selected").val();

                    if (isChecked && occupantType && rentType) {
                        hasValidData = true;

                        formData.append('nERSC03ViewModel.listVwAonlaNonEmpAllotStatus[' + cnt + '].VendorCode', vendorCode);
                        formData.append('nERSC03ViewModel.listVwAonlaNonEmpAllotStatus[' + cnt + '].SlNo', slno);
                        formData.append('nERSC03ViewModel.listVwAonlaNonEmpAllotStatus[' + cnt + '].AllotmentNo', row.find("td:eq(2)").text().trim());
                        formData.append('nERSC01ViewModel.listVwAonlaNonEmpAllotStatus[' + cnt + '].RentFromDate', row.find("td:eq(6) input").val());
                        formData.append('nERSC01ViewModel.listVwAonlaNonEmpAllotStatus[' + cnt + '].RentToDate', row.find("td:eq(7) input").val());
                        formData.append('nERSC03ViewModel.listVwAonlaNonEmpAllotStatus[' + cnt + '].OccupantType', occupantType);
                        formData.append('nERSC03ViewModel.listVwAonlaNonEmpAllotStatus[' + cnt + '].RentType', rentType);

                        cnt = cnt + 1;
                    } else if (isChecked && (!occupantType || !rentType)) {
                        CommonAlert("Alert", "Please select both Occupant Type and Rent Type for checked rows.", null, null, "Warning");
                        $(".modalLoader").css("display", "none");
                        return false;
                    }
                });



                if (!hasValidData) {
                    CommonAlert("Alert", "No valid data to save. Please check your selections.", null, null, "Warning");
                    $(".modalLoader").css("display", "none");
                    return false;
                }

                $.ajax({
                    type: "POST",
                    url: "@Url.Content("~")/M1/NERSC03/Add",
                    data: formData,
                    cache: false,
                    contentType: false,
                    processData: false,
                    dataType: "json",
                    error: function (xhr, response, error) {
                        CommonAlert("Error", response, null, null, "error");
                    },
                    success: function (response) {
                        var url = window.location.origin + "/" + response.areaName + "/" + response.selectedMenu + "/" + response.selectedAction;
                        if (response.isAlertBox) {
                            if (response.errorMessage != "") {
                                CommonAlert(response.alert, response.message, SubmitPopup, '/M1/NERSC03/Index', "error");
                            } else {
                                CommonAlert(response.alert, response.message, SubmitPopup, '/M1/NERSC03/Index', "alert", "create");
                            }
                        } else {
                            $(".modalLoader").hide();
                            GetIndex(url);
                        }
                    }
                });
            }, 10);
        }
    }*@


    $(document).ready(function () {
        $('#HrmsHrdGrid').DataTable();
        var exportfilename = $("#PlantCD").val() + "-RentList(" + $("#OccupantCode").val() + ")";
        BindGridWithIdCol([0, 1, 2, 3, 4, 5, 8, 9, 10], [0, 1, 2, 3, 4, 5, 8, 9, 10], '#HrmsHrdGrid', exportfilename);
        BootStrapCalender(".datetime");
        AddNewURLBuilder();

        $('#OccupantCode').select2({
            placeholder: 'Select an Occupant',
            allowClear: true,
            width: '100%'
        });
        $('#VendorTypeLOV').select2({
            placeholder: 'Select an vendor',
            allowClear: true,
            width: '100%'
        });
    });


    $(document).ready(function () {
        // Initialize Select2 for all vendor select dropdowns
        $(".vendorSelect").select2({
            placeholder: "--SELECT--",  // Placeholder text
            allowClear: true            // Allow clearing the selection
        });
    });


    $("#PlantCD").change(function () {
        AddNewURLBuilder();
    });

    function AddNewURLBuilder() {
        var PlantCD = $('#PlantCD').val();
        $("#addnew").attr("href", "M1/NERSC03/Create/" + PlantCD);
    }

    // function RentLOV_pop() {
    //    debugger;
    //    $(".modalLoader").css("display", "block");
    //    setTimeout(function () {
    //        CommonAjax('/M1/NERSC01/RentLOVBindJSON', "GET", false, "application/json", false, BindDropDownWithSelectAsNull, "#OccupantCode", { OccupantType: $('#OccupantList').val() });
    //        $(".modalLoader").hide();
    //    }, 10);
    //}

    //function addRow(button) {
    //    debugger;
    //    var currentRow = $(button).closest('tr');
    //    var newRow = currentRow.clone();

    //    // Clear text inputs, date inputs, and reset dropdowns
    //    newRow.find('input[type="text"]').val('');
    //    newRow.find('input[type="date"]').val('');
    //    newRow.find('select').val('').prop('disabled', null);
    //    newRow.find('input[type="checkbox"]').prop('checked', false);
    //    newRow.find('select').val('').prop('disabled', false);
    //    newRow.find('span.select2').remove(); // Remove Select2 spans from cloned row`


    //     Update the SNo (or other relevant columns)
    //    var allotmentNo = currentRow.find("td:eq(2)").text().trim();
    //    var highestSlNo = 0; // Default SLNo if not found

    //     Calculate the new SNo
    //    $("#HrmsHrdGrid tbody tr").each(function () {
    //        var rowAllotmentNo = $(this).find("td:eq(2)").text().trim();
    //        if (rowAllotmentNo === allotmentNo) {
    //            var slNoText = $(this).find("td:eq(1)").text().trim(); // Get SLNo
    //            var slNo = parseInt(slNoText, 10);
    //            if (!isNaN(slNo) && slNo > highestSlNo) {
    //                highestSlNo = slNo;
    //            }
    //        }
    //    });

    //    newRow.find('select.vendorSelect').each(function () {
    //        $(this).val(''); // Reset the value to default
    //        $(this).prop('disabled', false); // Ensure dropdown is enabled
    //    });

    //    var newSlNo = highestSlNo + 1;
    //    newRow.find("td:eq(1)").text(newSlNo);

    //    // Update dropdown IDs to be unique (optional if you use ID-based targeting)
    //    newRow.find('span.select2').remove();

    //    // Reset the dropdowns and reinitialize Select2
    //    newRow.find('select').each(function () {
    //        $(this).val(''); // Clear the value
    //        $(this).select2(); // Reinitialize Select2 on the cloned select
    //    });

    //    newRow.find('input[type="date"]').each(function () {
    //        $(this).datepicker("destroy"); // Destroy existing datepicker instance if it exists
    //        $(this).datepicker(); // Reinitialize datepicker
    //    });

    //    // Update IDs for the new row if needed
    //    newRow.find('select, input').each(function () {
    //        var oldId = $(this).attr('id');
    //        if (oldId) {
    //            var newId = oldId + '_row_' + new Date().getTime(); // Ensure unique ID
    //            $(this).attr('id', newId);
    //        }
    //    });

    //    // Insert the new row
    //    newRow.insertAfter(currentRow);

    //    newRow.find('select').each(function () {
    //        $(this).select2({
    //            placeholder: "Select an option", // Optional
    //            allowClear: true // Optional
    //        }).prop("disabled", false); // Enable the dropdown
    //    });
    //}

    function addRow(button) {
        debugger;
        var currentRow = $(button).closest('tr'); // Get the current row
        var newRow = currentRow.clone(); // Clone the current row

        // Clear input fields and reset dropdowns in the cloned row
        newRow.find('input[type="text"]').val('');
        newRow.find('input[type="date"]').val('');
        newRow.find('input[type="checkbox"]').prop('checked', false);
        newRow.find('select').val('').prop('disabled', false);
        newRow.find('span.select2').remove(); // Remove Select2 spans from cloned row

        // Dynamically calculate the highest SlNo
        var highestSlNo = 0;
        $("#HrmsHrdGrid tbody tr").each(function () {
            var slNoText = $(this).find("td:eq(1) input").val(); // Fetch SlNo value from input
            var slNo = parseInt(slNoText, 10); // Convert to integer
            if (!isNaN(slNo) && slNo > highestSlNo) {
                highestSlNo = slNo; // Update highest SlNo found
            }
        });

        // Increment the highest SlNo for the new row
        var nextSlNo = highestSlNo + 1;
        newRow.find("td:eq(1) input").val(nextSlNo); // Update SlNo in the new row

        // Reinitialize dropdowns (if using Select2)
        newRow.find('select').each(function () {
            $(this).val('');
            $(this).select2({
                placeholder: "Select an option",
                allowClear: true
            });
        });

        // Initialize datepickers for the new row
        newRow.find('input[type="date"]').each(function () {
            $(this).removeClass('hasDatepicker').removeAttr('id'); // Ensure unique ID
            $(this).datepicker(); // Initialize datepicker
        });

        // Insert the new row after the current one
        newRow.insertAfter(currentRow);
    }

    function removeRow(button) {

        var row = $(button).closest('tr');
        if (row.index() === 0) {
            alert("The original row cannot be deleted.");
            return; // Exit the function without removing the row
        }
        row.remove();



    }

</script>

<div class="plcholder-cn">
    <div class="table-responsive">
        <div class="table-area">
            <div class="table-title">
                <div class="btn-area-tbl"></div>
            </div>
            <div class="table-wrapper">
                <div class="table-con">
                    <div class="tableUp">
                        <div class="content-box">
                            <h3 class="sub-heading1"><span>Allotment details</span></h3>
                            <div class="m-form">
                                <form asp-area="M1" asp-controller="NERSC01" asp-action="Query" method="post" onsubmit="return Validate();">
                                    <div class="m-form">
                                        <div class="m-form-bx">
                                            <div class="row form-sm">
                                                <div class="col-sm-1 col-md-2">
                                                    <label class="m-lbl1 m-lbl2">Plant Code</label>
                                                </div>
                                                <div class="col-sm-2 col-md-2">
                                                    <select id="PlantCD" name="PlantCD" class="form-control" asp-items="@(new SelectList(Model.UnitLOVBind, "Value", "Text", Model.PlantCD))"></select>
                                                </div>

                                                <div class="col-sm-2 col-md-2">
                                                    <label class="m-lbl1 m-lbl2">Quarter List</label>
                                                </div>
                                                <div class="col-sm-2 col-md-2">
                                                    <select id="OccupantCode" name="OccupantCode" class="form-control" asp-items="@(new SelectList(Model.QuarterLOVBind, "Value", "Text", Model.OccupantCode))">
                                                        <option value="">--SELECT--</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="btn-area1">
                                            <button type="button" id="save" onclick="fnGet_Data()" class="m-btn-1 btn-success">Fetch Rent details</button>
                                            <input type="reset" id="save" class="m-btn-1 btn-warning" value="Reset" />
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="table-con">
                    <div class="tableUp">
                        <div class="pd-form-area">
                            <div class="btn-area-tbl">

                                @* <button type="button" class="btn btn-primary" onclick="addRow()">Add Row</button>*@


                            </div>
                            <table class="table table-striped table-hover" id="HrmsHrdGrid">
                                <thead>
                                    <tr>

                                        <th>Quarter No</th>
                                        @*<th style="display: none;">SNo</th>*@
                                        <th>SNo</th>
                                        <th>Allotment No</th>
                                        <th>Vendor Name</th>
                                        <th>Occupany Date</th>
                                        <th>Actual Occ Date</th>
                                        <th>Vacancy Date</th>
                                        <th>No of beds</th>
                                        <th style="display: none;">Rate</th>
                                        <th style="display: none;">Amt</th>
                                        <th>Occupant</th>
                                        <th>Quarter Rent</th>
                                        <th> </th>
                                        <th> </th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="nonEmpData">
                                    @foreach (var item in Model.listVwAonlaNonEmpAllotStatusShutdown)
                                    {
                                    <tr id="tr_@(item.UnitCode)_@(item.AllotmentNo)_@(item.SlNo)" data-ischange="0" style="@(!string.IsNullOrEmpty(item.RentType) ? "background-color:#e1ad01;" : "")">
                                        <td>@Html.DisplayFor(modelItem => item.QuarterCategory)-@Html.DisplayFor(modelItem => item.QuarterNo)</td>

                                        <td>
                                            <input type="text" class="form-control" value="@Html.DisplayFor(modelItem => item.SlNo)" readonly />
                                        </td>


                                        <td id="td_Rent_@(item.UnitCode)_@(item.AllotmentNo)_@(item.SlNo)">@Html.DisplayFor(modelItem => item.AllotmentNo)</td>




                                        @if (!string.IsNullOrEmpty(item.VendorCode))
                                        {
                                        <td>
                                            <select id="VendorTypeLOV_@(item.UnitCode)_@(item.AllotmentNo)_@(item.SlNo)" class="form-control vendorSelect">

                                                @foreach (var vendor in Model.VendorLOVBind)
                                                    {
                                                <option value="@item.VendorCode">@vendor.Text</option>
                                                    }
                                            </select>
                                        </td>
                                        }
                                        else
                                        {
                                        <td>
                                            <select id="VendorTypeLOV_@(item.UnitCode)_@(item.AllotmentNo)_@(item.SlNo)" class="form-control vendorSelect">
                                                <option value="">--SELECT--</option>
                                                @foreach (var vendor in Model.VendorLOVBind)
                                                    {
                                                <option value="@vendor.Value">@vendor.Text</option>
                                                    }
                                            </select>
                                        </td>
                                        }
                                        @*<td>
                                                                        <select id="VendorTypeLOV" class="form-control" asp-items="@(new SelectList(Model.VendorLOVBind, "Value", "Text", item.VendorCode))">
                                                                         <option value="">--SELECT--</option>
                                                </select>
                                            </td>*@
                                        <td id="td_Rent_@(item.UnitCode)_@(item.AllotmentNo)_@(item.PersonalNo)">@Html.DisplayFor(modelItem => item.OccupancyDate)</td>

                                        <td>
                                            <input type="text" class="form-control datetime" value="@item.RentFromDate?.ToString("dd/MM/yyyy").Replace("-","/")">
                                        </td>

                                        <td>
                                            <input type="text" class="form-control datetime" value="@item.VacancyDate?.ToString("dd/MM/yyyy").Replace("-","/")">
                                        </td>

                                        <td>
                                            <input type="number" class="form-control" value="@item.NofBeds" />
                                        </td>
                                        <td style="display: none;">
                                            <input type="number" class="form-control">
                                        </td>
                                        <td style="display: none;">
                                            <input type="number" class="form-control">
                                        </td>
                                        <td>

                                            <select id="OccupantTypeLOV" class="form-control" asp-items="@(new SelectList(Model.ShutDownOccupantLOVBind, "Value", "Text", Model.OccupantCode))">

                                                @*<select id="OccupantTypeLOV" class="form-control" disabled>
                                                    <option value="1010">ShutDown</option>*@
                                            </select>
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.RentType))
                                            {
                                            <select id="RentTypeLOV" class="form-control" asp-items="@(new SelectList(Model.ShutDownRentTypeLOVBind, "Value", "Text", item.RentType))" disabled>
                                                <option value="">--SELECT--</option>
                                            </select>
                                            }
                                            else
                                            {
                                            <select id="RentTypeLOV" class="form-control" asp-items="@(new SelectList(Model.ShutDownRentTypeLOVBind, "Value", "Text", item.RentType))">
                                                <option value="">--SELECT--</option>
                                            </select>
                                            }
                                        </td>

                                        <td>
                                            <input type="checkbox" class="save-checkbox" data-id="@item.AllotmentNo" />
                                        </td>
                                        <td><button type="button" class="btn btn-danger" onclick="removeRow(this)">Remove</button></td>
                                        <td>
                                            <button type="button" class="btn btn-primary" onclick="addRow(this)">
                                                <i class="fas fa-plus"></i>
                                            </button>
                                        </td>
                                    </tr>
                                    }
                                </tbody>
                            </table>
                            <div class="btn-area1 btn-area-fixed">
                                <button type="button" class="m-btn-1 save @Model.Insert" onclick="SaveAccessToDB()">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="commonModalbinder" class="modal" style="display:none!important;z-index:99999999 !important;"></div>


<script>
    function changeRowColor(row) {
        // Remove the background color from all rows
        var rows = document.getElementById('nonEmpData').getElementsByTagName('tr');
        for (var i = 0; i < rows.length; i++) {
            rows[i].style.backgroundColor = '';
        }

        // Set the background color of the clicked row
        row.style.backgroundColor = '#c0c0c0'; // Change this color to whatever you prefer
    }
</script>